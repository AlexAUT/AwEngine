include(ExternalProject)

set(DEPS_PREFIX "${CMAKE_CURRENT_SOURCE_DIR}/build")
set(DEPS_SRC "${DEPS_PREFIX}/src/")
set(DEPS_INSTALL_DIR "${DEPS_PREFIX}/bin_${CMAKE_SYSTEM_NAME}_${CMAKE_BUILD_TYPE}${ANDROID_ABI}")

if (${CMAKE_SYSTEM_NAME} STREQUAL "Android")
  set(ANDROID_ARGS
    -DCMAKE_SYSTEM_NAME="Android"
    -DANDROID_PLATFORM=${ANDROID_PLATFORM}
    -DANDROID_STL=${ANDROID_STL}
    -DANDROID_ABI=${ANDROID_ABI}
    -DANDROID_NDK=${ANDROID_NDK}
    -DCMAKE_LIBRARY_OUTPUT_DIRECTORY=${CMAKE_LIBRARY_OUTPUT_DIRECTORY}
    -DCMAKE_MAKE_PROGRAM=${CMAKE_MAKE_PROGRAM}
    -DCMAKE_TOOLCHAIN_FILE=${CMAKE_TOOLCHAIN_FILE}
    -DANDROID_NATIVE_API_LEVEL=${ANDROID_NATIVE_API_LEVEL}
    -DANDROID_TOOLCHAIN=${ANDROID_TOOLCHAIN}
    -DLIB_INSTALL_DIR=lib/${ANDROID_ABI}/
    -DCMAKE_INSTALL_LIBDIR=lib/${ANDROID_ABI}/
  )
endif()

ExternalProject_Add(
  glm-src
  PREFIX ${DEPS_PREFIX}
  BINARY_DIR "deps/glm_build_${CMAKE_BUILD_TYPE}_${CMAKE_SYSTEM_NAME}${ANDROID_ABI}"
  INSTALL_DIR ${DEPS_INSTALL_DIR}
  GIT_REPOSITORY https://github.com/g-truc/glm
  GIT_TAG 0.9.9.7
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR} -DGLM_TEST_ENABLE=OFF -DBUILD_SHARED_LIBS=OFF -DBUILD_STATIC_LIBS=OFF -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} ${ANDROID_ARGS}
  UPDATE_COMMAND ""
  INSTALL_COMMAND ${CMAKE_COMMAND} -E copy_directory ${DEPS_SRC}/glm-src/glm ${DEPS_INSTALL_DIR}/include/glm
)


# set(SPDLOG_BUILD_SHARED ON)
# set(SPDLOG_BUILD_TESTS OFF)
# set(SPDLOG_BUILD_EXAMPLE OFF)
# loadDependencyFromGit(spdlog https://github.com/gabime/spdlog v1.4.2)
ExternalProject_Add(
  spdlog-src
  PREFIX ${DEPS_PREFIX}
  BINARY_DIR "deps/spdlog_build_${CMAKE_BUILD_TYPE}_${CMAKE_SYSTEM_NAME}${ANDROID_ABI}"
  INSTALL_DIR ${DEPS_INSTALL_DIR}
  GIT_REPOSITORY https://github.com/gabime/spdlog
  GIT_TAG v1.4.2
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR} -DSPDLOG_BUILD_STATIC=ON -DSPDLOG_BUILD_SHARED=ON -DSPDLOG_BUILD_TESTS=OFF -DSPDLOG_BUILD_EXAMPLE=OFF -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} ${ANDROID_ARGS}
  UPDATE_COMMAND ""
)
if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
  set(SPDLOG_LIB "spdlogd")
else()
  set(SPDLOG_LIB "spdlog")
endif()

ExternalProject_Add(
  freetype-src
  PREFIX ${DEPS_PREFIX}
  BINARY_DIR "deps/freetype_build_${CMAKE_BUILD_TYPE}_${CMAKE_SYSTEM_NAME}${ANDROID_ABI}"
  INSTALL_DIR ${DEPS_INSTALL_DIR}
  GIT_REPOSITORY https://github.com/aseprite/freetype2
  GIT_TAG VER-2-10-0
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DBUILD_SHARED_LIBS=ON ${ANDROID_ARGS}
  UPDATE_COMMAND ""
)
if (${CMAKE_BUILD_TYPE} STREQUAL "Debug")
  set(FREETYPE_LIB "freetyped")
else()
  set(FREETYPE_LIB "freetype")
endif()

if (NOT ${CMAKE_SYSTEM_NAME} STREQUAL "Android")
ExternalProject_Add(
  sdl2-src
  PREFIX ${DEPS_PREFIX}
  BINARY_DIR "deps/sdl2_build_${CMAKE_BUILD_TYPE}_${CMAKE_SYSTEM_NAME}${ANDROID_ABI}"
  INSTALL_DIR ${DEPS_INSTALL_DIR}
  GIT_REPOSITORY https://github.com/spurious/SDL-mirror.git
  GIT_TAG 1beeec74ae3c32b55966564045009398ead04ec8
  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX=${DEPS_INSTALL_DIR} -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} -DSDL_STATIC=OFF -DVIDEO_KMSDRM=OFF
  UPDATE_COMMAND ""
)
add_dependencies(${PROJECT_NAME} sdl2-src)

else()
 set(SDL_INC "${ANDROID_NDK}/sources/third_party/sdl/include/")
 set(SDL_LIB "${ANDROID_NDK}/sources/third_party/sdl/lib/${ANDROID_ABI}/")
 # Sadly this way breaks gradle...
 #add_library(SDL2 SHARED IMPORTED)
 #set_property(TARGET SDL2 PROPERTY IMPORTED_LOCATION ${SDL_LIB}/libSDL2.so)
 #set_property(TARGET SDL2 PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${SDL_INC})
 # Instead for the old school way
 target_include_directories(${PROJECT_NAME} PUBLIC ${SDL_INC})
 target_link_directories(${PROJECT_NAME} PUBLIC ${SDL_LIB})
endif()

if (${CMAKE_BUILD_TYPE} STREQUAL "Debug" AND NOT ${CMAKE_SYSTEM_NAME} STREQUAL "Android")
  set(SDL_LIB "SDL2d")
else()
  set(SDL_LIB "SDL2")
endif()

add_dependencies(${PROJECT_NAME} glm-src spdlog-src freetype-src)

set(EXT_INC
  ${DEPS_INSTALL_DIR}/include
  ${DEPS_INSTALL_DIR}/include/freetype2
  ${DEPS_INSTALL_DIR}/include/SDL2
)
set(EXT_LIB ${DEPS_INSTALL_DIR}/lib ${DEPS_INSTALL_DIR}/lib64)

target_include_directories(${PROJECT_NAME} PUBLIC ${EXT_INC})
target_link_directories(${PROJECT_NAME} PUBLIC ${EXT_LIB})

#Link ext libs
target_link_libraries(${PROJECT_NAME} PUBLIC ${SPDLOG_LIB} ${FREETYPE_LIB} z ${SDL_LIB})
